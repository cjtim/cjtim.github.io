---
import { getCollection } from "astro:content"
import Layout from "@layouts/Layout.astro"
import ButtonCenter from "src/components/ButtonCenter.astro"
import Breadcrumb from "src/components/Breadcrumb.astro"
import { getFormattedDate } from "@utils/date"
import Author from "src/components/Author.astro"

export async function getStaticPaths() {
  const blogEntries =
    await getCollection("projects")
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }))
}

const { entry } = Astro.props
const { Content } = await entry.render()
---

<Layout
  title={entry.data.title}
  description={entry.data.description}
  image={entry.data.image.url}
>
  <main
    class="w-full bg-gray-100 text-black"
  >
    <div
      class="container mx-auto flex max-w-screen-md flex-col overflow-hidden"
    >
      <div class="py-4">
        <Breadcrumb
          items={[
            {
              title: "Home",
              href: "/",
            },
            {
              title: "Projects",
              href: "/projects",
            },
            {
              title: entry.data.title,
              href: `/projects/${entry.slug}`,
            },
          ]}
        />
      </div>
      <div
        class="flex h-full w-full justify-center"
      >
        <img
          src={entry.data.image?.url}
          alt="Thumbnail"
          loading="lazy"
          class="h-full max-w-screen-md rounded-3xl object-cover"
        />
      </div>
    </div>

    <article
      class="mx-auto max-w-screen-md"
    >
      <div
        class="flex w-full flex-col gap-1 py-2 md:w-auto"
      >
        <h1 class="text-3xl font-bold">
          {entry.data.title}
        </h1>
        <h2
          class="text-lg font-medium text-gray-500"
        >
          {entry.data.description}
        </h2>
        <Author />

        <a
          >Published on: {
            getFormattedDate(
              entry.data.pubDate,
            )
          }
        </a>
      </div>

      <div
        class="h-px w-full overflow-visible rounded-full border border-gray-300"
      >
      </div>

      <div
        class="prose prose-base mx-auto my-3
        max-w-screen-md dark:prose-invert prose-a:text-blue-600"
      >
        <Content />

        <!-- Tags -->
        <div
          class="flex w-full flex-wrap items-center gap-3 md:w-auto"
        >
          {
            entry.data.tags.map(
              (tag) => (
                <span class="text-sm text-gray-500">
                  #{tag}
                </span>
              ),
            )
          }
        </div>
      </div>

      <div
        class="flex justify-center pb-7 pt-7"
      >
        <ButtonCenter
          text="← View all projects"
          href="/projects"
        />
      </div>
    </article>
  </main>
</Layout>
